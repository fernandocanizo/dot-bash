
# convenience functions to add & on commonly used commands that open a window

function evince {
	# evince spawns a window no matter if it cannot deal with the file, so I made a couple of checks to avoid bringing my system unresponsive

	# 20 PDFs should be enough
	if [[ $# -gt 10 ]]; then
		echo "You're opening too much files, your system will come down to its knees. Aborting. Files $#"
		return 1
	fi

	# check we're opening a PDF file, if not, don't spawn an evince window
	for aFile in "$@"; do
		file "$aFile" | grep -q 'PDF document'
		if [[ $? -eq 0 ]]; then
			command evince "$aFile" 2>/dev/null &
		fi
	done
}

function dropbox {
	command dropbox &
}

# change guake background before starting it
function guake {
	switch.guake.background
	command guake &
}

function lucidor {
	command lucidor "$@" 2>/dev/null &
}

function emacs {
	command emacs "$@" &
}
